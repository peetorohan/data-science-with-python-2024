{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5ce81538-5ed7-4ad5-a71b-84b02226606e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pandas in c:\\users\\pc01\\anaconda3\\lib\\site-packages (2.2.2)\n",
      "Requirement already satisfied: numpy>=1.26.0 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from pandas) (1.26.4)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from pandas) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from pandas) (2024.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from pandas) (2023.3)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n"
     ]
    }
   ],
   "source": [
    "!pip install pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "47ccefd9-4169-464c-925e-51a5193589e3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3ad4a08c-29a8-4860-bdd9-638489e5c3f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(r\"C:\\Users\\PC01\\Documents\\anaconda1\\archive.zip\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d10d4142-82d8-4d35-9305-c8a239f29a3d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Patient_ID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Weight_kg</th>\n",
       "      <th>Height_cm</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Blood_Pressure_Systolic</th>\n",
       "      <th>Blood_Pressure_Diastolic</th>\n",
       "      <th>Cholesterol_Level</th>\n",
       "      <th>Smoking_Status</th>\n",
       "      <th>...</th>\n",
       "      <th>Exercise_Induced_Pain</th>\n",
       "      <th>Heart_Attack</th>\n",
       "      <th>Age_Group</th>\n",
       "      <th>Region</th>\n",
       "      <th>Air_Pollution_Level</th>\n",
       "      <th>Income_Level</th>\n",
       "      <th>Education_Level</th>\n",
       "      <th>Health_Insurance</th>\n",
       "      <th>Regular_Checkups</th>\n",
       "      <th>Medication_Adherence</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>56</td>\n",
       "      <td>Male</td>\n",
       "      <td>118.4</td>\n",
       "      <td>184</td>\n",
       "      <td>35.4</td>\n",
       "      <td>96</td>\n",
       "      <td>94</td>\n",
       "      <td>204.3</td>\n",
       "      <td>Ex-Smoker</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Adult</td>\n",
       "      <td>Central</td>\n",
       "      <td>67</td>\n",
       "      <td>Medium</td>\n",
       "      <td>College</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Occasionally</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>46</td>\n",
       "      <td>Male</td>\n",
       "      <td>50.7</td>\n",
       "      <td>164</td>\n",
       "      <td>32.6</td>\n",
       "      <td>114</td>\n",
       "      <td>65</td>\n",
       "      <td>279.4</td>\n",
       "      <td>Non-Smoker</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Adult</td>\n",
       "      <td>North</td>\n",
       "      <td>16</td>\n",
       "      <td>Low</td>\n",
       "      <td>High School</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Occasionally</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>32</td>\n",
       "      <td>Male</td>\n",
       "      <td>118.0</td>\n",
       "      <td>179</td>\n",
       "      <td>39.8</td>\n",
       "      <td>98</td>\n",
       "      <td>118</td>\n",
       "      <td>291.4</td>\n",
       "      <td>Current Smoker</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Adult</td>\n",
       "      <td>South</td>\n",
       "      <td>32</td>\n",
       "      <td>Medium</td>\n",
       "      <td>College</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Frequently</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>60</td>\n",
       "      <td>Male</td>\n",
       "      <td>96.8</td>\n",
       "      <td>161</td>\n",
       "      <td>23.7</td>\n",
       "      <td>108</td>\n",
       "      <td>101</td>\n",
       "      <td>273.3</td>\n",
       "      <td>Non-Smoker</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Youth</td>\n",
       "      <td>East</td>\n",
       "      <td>86</td>\n",
       "      <td>Low</td>\n",
       "      <td>College</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Occasionally</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>25</td>\n",
       "      <td>Male</td>\n",
       "      <td>53.9</td>\n",
       "      <td>169</td>\n",
       "      <td>24.4</td>\n",
       "      <td>141</td>\n",
       "      <td>73</td>\n",
       "      <td>290.8</td>\n",
       "      <td>Ex-Smoker</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Youth</td>\n",
       "      <td>South</td>\n",
       "      <td>15</td>\n",
       "      <td>Low</td>\n",
       "      <td>High School</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Occasionally</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Patient_ID  Age   Sex  Weight_kg  Height_cm   BMI  Blood_Pressure_Systolic  \\\n",
       "0           1   56  Male      118.4        184  35.4                       96   \n",
       "1           2   46  Male       50.7        164  32.6                      114   \n",
       "2           3   32  Male      118.0        179  39.8                       98   \n",
       "3           4   60  Male       96.8        161  23.7                      108   \n",
       "4           5   25  Male       53.9        169  24.4                      141   \n",
       "\n",
       "   Blood_Pressure_Diastolic  Cholesterol_Level  Smoking_Status  ...  \\\n",
       "0                        94              204.3       Ex-Smoker  ...   \n",
       "1                        65              279.4      Non-Smoker  ...   \n",
       "2                       118              291.4  Current Smoker  ...   \n",
       "3                       101              273.3      Non-Smoker  ...   \n",
       "4                        73              290.8       Ex-Smoker  ...   \n",
       "\n",
       "   Exercise_Induced_Pain  Heart_Attack Age_Group   Region Air_Pollution_Level  \\\n",
       "0                     No            No     Adult  Central                  67   \n",
       "1                     No           Yes     Adult    North                  16   \n",
       "2                     No            No     Adult    South                  32   \n",
       "3                     No            No     Youth     East                  86   \n",
       "4                     No            No     Youth    South                  15   \n",
       "\n",
       "   Income_Level  Education_Level Health_Insurance Regular_Checkups  \\\n",
       "0        Medium          College              Yes     Occasionally   \n",
       "1           Low      High School              Yes     Occasionally   \n",
       "2        Medium          College              Yes       Frequently   \n",
       "3           Low          College              Yes     Occasionally   \n",
       "4           Low      High School              Yes     Occasionally   \n",
       "\n",
       "  Medication_Adherence  \n",
       "0                  Yes  \n",
       "1                  Yes  \n",
       "2                  Yes  \n",
       "3                  Yes  \n",
       "4                   No  \n",
       "\n",
       "[5 rows x 27 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "40d77265-7e19-45d4-9f9e-27a6e2d2192c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Patient_ID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Weight_kg</th>\n",
       "      <th>Height_cm</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Blood_Pressure_Systolic</th>\n",
       "      <th>Blood_Pressure_Diastolic</th>\n",
       "      <th>Cholesterol_Level</th>\n",
       "      <th>Smoking_Status</th>\n",
       "      <th>...</th>\n",
       "      <th>Exercise_Induced_Pain</th>\n",
       "      <th>Heart_Attack</th>\n",
       "      <th>Age_Group</th>\n",
       "      <th>Region</th>\n",
       "      <th>Air_Pollution_Level</th>\n",
       "      <th>Income_Level</th>\n",
       "      <th>Education_Level</th>\n",
       "      <th>Health_Insurance</th>\n",
       "      <th>Regular_Checkups</th>\n",
       "      <th>Medication_Adherence</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>266781</th>\n",
       "      <td>266782</td>\n",
       "      <td>33</td>\n",
       "      <td>Male</td>\n",
       "      <td>108.3</td>\n",
       "      <td>160</td>\n",
       "      <td>35.9</td>\n",
       "      <td>121</td>\n",
       "      <td>102</td>\n",
       "      <td>152.7</td>\n",
       "      <td>Ex-Smoker</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Youth</td>\n",
       "      <td>North</td>\n",
       "      <td>16</td>\n",
       "      <td>High</td>\n",
       "      <td>High School</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Occasionally</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266782</th>\n",
       "      <td>266783</td>\n",
       "      <td>33</td>\n",
       "      <td>Female</td>\n",
       "      <td>75.1</td>\n",
       "      <td>186</td>\n",
       "      <td>19.8</td>\n",
       "      <td>164</td>\n",
       "      <td>119</td>\n",
       "      <td>201.8</td>\n",
       "      <td>Non-Smoker</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Youth</td>\n",
       "      <td>South</td>\n",
       "      <td>5</td>\n",
       "      <td>Low</td>\n",
       "      <td>College</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Occasionally</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266783</th>\n",
       "      <td>266784</td>\n",
       "      <td>27</td>\n",
       "      <td>Female</td>\n",
       "      <td>56.5</td>\n",
       "      <td>198</td>\n",
       "      <td>34.7</td>\n",
       "      <td>159</td>\n",
       "      <td>74</td>\n",
       "      <td>160.9</td>\n",
       "      <td>Non-Smoker</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Adult</td>\n",
       "      <td>West</td>\n",
       "      <td>55</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Occasionally</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266784</th>\n",
       "      <td>266785</td>\n",
       "      <td>26</td>\n",
       "      <td>Male</td>\n",
       "      <td>70.2</td>\n",
       "      <td>180</td>\n",
       "      <td>35.8</td>\n",
       "      <td>138</td>\n",
       "      <td>112</td>\n",
       "      <td>270.3</td>\n",
       "      <td>Current Smoker</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Adult</td>\n",
       "      <td>Central</td>\n",
       "      <td>38</td>\n",
       "      <td>Low</td>\n",
       "      <td>College</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Rarely</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266785</th>\n",
       "      <td>266786</td>\n",
       "      <td>43</td>\n",
       "      <td>Female</td>\n",
       "      <td>61.6</td>\n",
       "      <td>173</td>\n",
       "      <td>37.8</td>\n",
       "      <td>99</td>\n",
       "      <td>100</td>\n",
       "      <td>223.9</td>\n",
       "      <td>Non-Smoker</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Adult</td>\n",
       "      <td>North</td>\n",
       "      <td>51</td>\n",
       "      <td>High</td>\n",
       "      <td>College</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Rarely</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Patient_ID  Age     Sex  Weight_kg  Height_cm   BMI  \\\n",
       "266781      266782   33    Male      108.3        160  35.9   \n",
       "266782      266783   33  Female       75.1        186  19.8   \n",
       "266783      266784   27  Female       56.5        198  34.7   \n",
       "266784      266785   26    Male       70.2        180  35.8   \n",
       "266785      266786   43  Female       61.6        173  37.8   \n",
       "\n",
       "        Blood_Pressure_Systolic  Blood_Pressure_Diastolic  Cholesterol_Level  \\\n",
       "266781                      121                       102              152.7   \n",
       "266782                      164                       119              201.8   \n",
       "266783                      159                        74              160.9   \n",
       "266784                      138                       112              270.3   \n",
       "266785                       99                       100              223.9   \n",
       "\n",
       "        Smoking_Status  ...  Exercise_Induced_Pain  Heart_Attack Age_Group  \\\n",
       "266781       Ex-Smoker  ...                     No           Yes     Youth   \n",
       "266782      Non-Smoker  ...                     No           Yes     Youth   \n",
       "266783      Non-Smoker  ...                     No            No     Adult   \n",
       "266784  Current Smoker  ...                     No            No     Adult   \n",
       "266785      Non-Smoker  ...                     No            No     Adult   \n",
       "\n",
       "         Region Air_Pollution_Level  Income_Level  Education_Level  \\\n",
       "266781    North                  16          High      High School   \n",
       "266782    South                   5           Low          College   \n",
       "266783     West                  55        Medium         Graduate   \n",
       "266784  Central                  38           Low          College   \n",
       "266785    North                  51          High          College   \n",
       "\n",
       "       Health_Insurance Regular_Checkups Medication_Adherence  \n",
       "266781              Yes     Occasionally                  Yes  \n",
       "266782              Yes     Occasionally                   No  \n",
       "266783              Yes     Occasionally                  Yes  \n",
       "266784              Yes           Rarely                  Yes  \n",
       "266785              Yes           Rarely                  Yes  \n",
       "\n",
       "[5 rows x 27 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "139b4e85-3eb4-4f61-97c4-3a25cfd97ffa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 266786 entries, 0 to 266785\n",
      "Data columns (total 27 columns):\n",
      " #   Column                    Non-Null Count   Dtype  \n",
      "---  ------                    --------------   -----  \n",
      " 0   Patient_ID                266786 non-null  int64  \n",
      " 1   Age                       266786 non-null  int64  \n",
      " 2   Sex                       266786 non-null  object \n",
      " 3   Weight_kg                 266786 non-null  float64\n",
      " 4   Height_cm                 266786 non-null  int64  \n",
      " 5   BMI                       266786 non-null  float64\n",
      " 6   Blood_Pressure_Systolic   266786 non-null  int64  \n",
      " 7   Blood_Pressure_Diastolic  266786 non-null  int64  \n",
      " 8   Cholesterol_Level         266786 non-null  float64\n",
      " 9   Smoking_Status            266786 non-null  object \n",
      " 10  Alcohol_Consumption       266786 non-null  int64  \n",
      " 11  Physical_Activity_Hours   266786 non-null  float64\n",
      " 12  Diabetes                  266786 non-null  object \n",
      " 13  Family_History            266786 non-null  object \n",
      " 14  Diet_Type                 266786 non-null  object \n",
      " 15  Stress_Level              266786 non-null  int64  \n",
      " 16  Heart_Rate                266786 non-null  int64  \n",
      " 17  Exercise_Induced_Pain     266786 non-null  object \n",
      " 18  Heart_Attack              266786 non-null  object \n",
      " 19  Age_Group                 266786 non-null  object \n",
      " 20  Region                    266786 non-null  object \n",
      " 21  Air_Pollution_Level       266786 non-null  int64  \n",
      " 22  Income_Level              266786 non-null  object \n",
      " 23  Education_Level           266786 non-null  object \n",
      " 24  Health_Insurance          266786 non-null  object \n",
      " 25  Regular_Checkups          266786 non-null  object \n",
      " 26  Medication_Adherence      266786 non-null  object \n",
      "dtypes: float64(4), int64(9), object(14)\n",
      "memory usage: 55.0+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ff6a044a-1801-4899-acff-152e96e88054",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: matplotlib in c:\\users\\pc01\\anaconda3\\lib\\site-packages (3.9.2)Note: you may need to restart the kernel to use updated packages.\n",
      "\n",
      "Requirement already satisfied: contourpy>=1.0.1 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from matplotlib) (1.2.0)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from matplotlib) (0.11.0)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from matplotlib) (4.51.0)\n",
      "Requirement already satisfied: kiwisolver>=1.3.1 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from matplotlib) (1.4.4)\n",
      "Requirement already satisfied: numpy>=1.23 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from matplotlib) (1.26.4)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from matplotlib) (24.1)\n",
      "Requirement already satisfied: pillow>=8 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from matplotlib) (10.4.0)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from matplotlib) (3.1.2)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from matplotlib) (2.9.0.post0)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\pc01\\anaconda3\\lib\\site-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n"
     ]
    }
   ],
   "source": [
    "pip install matplotlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "89243fea-6d20-4e4b-a28c-195a7a805f53",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "080ed340-60f3-401a-9ad9-08554659942b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Example data\n",
    "x = [1, 2, 3, 4, 5]\n",
    "y = [1, 4, 9, 16, 25]\n",
    "\n",
    "# Create a simple line plot\n",
    "plt.plot(x, y)\n",
    "\n",
    "# Add labels and title\n",
    "plt.xlabel('X-axis')\n",
    "plt.ylabel('Y-axis')\n",
    "plt.title('Simple Line Plot')\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "5667f782-e5ed-4e37-8292-1eaa768c9ab8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Patient_ID', 'Age', 'Sex', 'Weight_kg', 'Height_cm', 'BMI',\n",
      "       'Blood_Pressure_Systolic', 'Blood_Pressure_Diastolic',\n",
      "       'Cholesterol_Level', 'Smoking_Status', 'Alcohol_Consumption',\n",
      "       'Physical_Activity_Hours', 'Diabetes', 'Family_History', 'Diet_Type',\n",
      "       'Stress_Level', 'Heart_Rate', 'Exercise_Induced_Pain', 'Heart_Attack',\n",
      "       'Age_Group', 'Region', 'Air_Pollution_Level', 'Income_Level',\n",
      "       'Education_Level', 'Health_Insurance', 'Regular_Checkups',\n",
      "       'Medication_Adherence'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load your data into a DataFrame\n",
    "df = pd.read_csv(r\"C:\\Users\\PC01\\Documents\\anaconda1\\archive.zip\")\n",
    "\n",
    "# Display the column names\n",
    "print(df.columns)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "015d0df6-e3a1-4f13-970d-f0f413f7fb69",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
